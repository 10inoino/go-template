// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"example/web-service-gin/db"
	"example/web-service-gin/src/presentation/controller"
	"example/web-service-gin/src/repository/postgres/repository"
	"example/web-service-gin/src/usecase/album"
	"github.com/gin-gonic/gin"
)

// Injectors from wire.go:

func InitializeEvent() (*gin.Engine, error) {
	sqlDB, err := db.NewPostgresDB()
	if err != nil {
		return nil, err
	}
	albumRepository := repository.NewAlbumRepository(sqlDB)
	createAlbumUsecase := album_uc.NewCreateAlbumUsecase(albumRepository)
	getAlbumUsecase := album_uc.NewGetAlbumUsecase(albumRepository)
	listAlbumUsecase := album_uc.NewListAlbumUsecase(albumRepository)
	updateAlbumUsecase := album_uc.NewUpdateAlbumUsecase(albumRepository)
	deleteAlbumUsecase := album_uc.NewDeleteAlbumUsecase(albumRepository)
	albumController := controller.NewAlbumController(createAlbumUsecase, getAlbumUsecase, listAlbumUsecase, updateAlbumUsecase, deleteAlbumUsecase)
	healthCheckController := controller.NewHealthCheckController()
	engine := NewGinEngine(albumController, healthCheckController)
	return engine, nil
}
