services:
  golang:
    container_name: ${SERVICE_NAME}
    build:
      context: .
      dockerfile: Dockerfile
    command: /bin/sh -c "while sleep 1000; do :; done"
    volumes:
      - ../:/workspaces
    environment:
      PSQL_DBNAME: ${PSQL_DBNAME}
      PSQL_HOST: ${PSQL_HOST}
      PSQL_USER: ${PSQL_USER}
      PSQL_PASS: ${PSQL_PASSWORD}
      PSQL_SSLMODE: ${PSQL_SSLMODE}
  postgresql:
    env_file:
      - .env
    image: postgres:15rc2-alpine
    restart: always
    environment:
      POSTGRES_USER: ${SERVICE_NAME}
      POSTGRES_PASSWORD: password
      PGPASSWORD: password123
      POSTGRES_DB: ${SERVICE_NAME}
    ports:
      - "5432"
    volumes:
      - "go-template-postgres-volume:/var/lib/postgresql/data" # Update this to your project
  postgres-gui:
    image: sosedoff/pgweb
    container_name: "${SERVICE_NAME}-pgweb"
    ports:
      - "8081:8081"
    depends_on:
      - postgresql
  mysql:
    image: mysql:8.0.33
    ports:
      - 3306
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: ${SERVICE_NAME}
      MYSQL_USER: ${SERVICE_NAME}
      MYSQL_PASSWORD: password
    volumes:
      - "go-template-mysql-volume:/var/lib/mysql" # Update this to your project
  mysql-gui:
    image: phpmyadmin/phpmyadmin
    ports:
      - 8082:80
    environment:
      - PMA_ARBITRARY=1
    

volumes:
  go-template-postgres-volume: # Update this to your project
  go-template-mysql-volume: # Update this to your project
